#Использовать cmdline
#Использовать fs
#Использовать logos
#Использовать json

Перем Лог;
Перем Сервер;
Перем Токен;


Процедура ПриСозданииОбъекта(АдресСервера, ТокенАутентификации = "")
	
	Лог = ПолучитьЛог();
	Сервер = АдресСервера;
	Токен = ТокенАутентификации;

КонецПроцедуры

Функция ПолучитьЛог()

	Если Лог = Неопределено Тогда
		Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());
	КонецЕсли;
	Возврат Лог;

КонецФункции

Функция НовыйСоединение()

	Возврат Новый HTTPСоединение(Сервер)

КонецФункции

Процедура ПолучитьПоследнийРелиз(Знач КаталогСохранения, Знач ИДПроекта) Экспорт

	ТекстЗапроса = СтрШаблон("/api/v4/projects/%1/releases", ИДПроекта);
	Соединение = НовыйСоединение();
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("PRIVATE-TOKEN", Токен);
	Запрос = Новый HTTPЗапрос(ТекстЗапроса, Заголовки);

	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния <> 200 Тогда
		ВызватьИсключение "Не удалось получить данные релизов проекта";
	КонецЕсли;

	ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку();
	ПарсерJSON = Новый ПарсерJSON;
	СтруктураОтвета = ПарсерJSON.ПрочитатьJSON(ОтветСтрокой);

	Если СтруктураОтвета.Количество() = 0 Тогда
		Лог.Информация("Не найдено релизов проекта.");	
		Возврат;
	КонецЕсли;

	КрайнийРелиз = СтруктураОтвета[0];
	Сообщить(ТипЗнч(КрайнийРелиз));

	Если КрайнийРелиз["assets"] <> Неопределено Тогда
		Для каждого ВложенныйФайл Из КрайнийРелиз["assets"]["sources"] Цикл
			Лог.Отладка(ВложенныйФайл["format"]);
			Лог.Отладка(ВложенныйФайл["URL"]);
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

Функция СоздатьРелиз(Знач ФайлКонфигурации) Экспорт
	
КонецФункции