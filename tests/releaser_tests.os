#Использовать "../src"
#Использовать fs
#Использовать v8runner

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;

	ИменаТестов.Добавить("Тест_Версия");
	ИменаТестов.Добавить("Тест_ЗапускБезПараметров");
	ИменаТестов.Добавить("Тест_ЗапускБезПутиКБазе");
	ИменаТестов.Добавить("Тест_ФормированиеРелиза");

	Возврат ИменаТестов;

КонецФункции

Процедура Тест_Версия() Экспорт
	
	Ожидаем.Что(ПараметрыСистемы.Версия(), "Версия не равна 1.0.0").Равно("1.0.0");	

КонецПроцедуры

Процедура Тест_ЗапускБезПараметров() Экспорт
	
	ОбщегоНазначения.КомандаСистемы("oscript ./src/main.os");		

КонецПроцедуры

Процедура Тест_ЗапускБезПутиКБазе() Экспорт
	
	Попытка
		ОбщегоНазначения.КомандаСистемы("oscript ./src/main.os release ");				
	Исключение
		Текст = ИнформацияОбОшибке().Описание;
		Ожидаем.Что(Текст, "Некорректное сообщение об ошибке")
				.Содержит("Не указана строка соединения с базой");
		Возврат;
	КонецПопытки;

	ВызватьИсключение "Запуск формирования релиза без строки соединения не вызвал ошибки";

КонецПроцедуры

Процедура Тест_ФормированиеРелиза() Экспорт

	КаталогБазы = ОбъединитьПути(КаталогВременныхФайлов(), "releaser");
	ФС.ОбеспечитьПустойКаталог(КаталогБазы);

	СтрокаПодключения = СтрШаблон("/F%1", КаталогБазы);

	УправлениеКонфигуратором = Новый УправлениеКонфигуратором();
	УправлениеКонфигуратором.КаталогСборки(КаталогБазы);
	УправлениеКонфигуратором.УстановитьКонтекст(СтрокаПодключения);
	
	СоздатьФайловуюБазу(УправлениеКонфигуратором, КаталогБазы);	
	
КонецПроцедуры

Процедура СоздатьФайловуюБазу(Конфигуратор, Знач КаталогБазы, Знач ПутьКШаблону = "",
	Знач ИмяБазыВСписке = "", Знач КодЯзыка = "")

	ФС.ОбеспечитьКаталог(КаталогБазы);
	УдалитьФайлы(КаталогБазы, "*.*");

	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("CREATEINFOBASE");
	ПараметрыЗапуска.Добавить("File=""" +КаталогБазы + """");
	ПараметрыЗапуска.Добавить("/Out""" +Конфигуратор.ФайлИнформации() + """");
	Если ЗначениеЗаполнено(КодЯзыка) Тогда
		ПараметрыЗапуска.Добавить("/L" +СокрЛП(КодЯзыка));
	КонецЕсли;

	Если ИмяБазыВСписке <> "" Тогда
		ПараметрыЗапуска.Добавить("/AddInList""" + ИмяБазыВСписке + """");
	КонецЕсли;
	Если ПутьКШаблону <> "" Тогда
		ПараметрыЗапуска.Добавить("/UseTemplate""" + ПутьКШаблону + """");
	КонецЕсли;

	СтрокаЗапуска = "";
	Для Каждого Параметр Из ПараметрыЗапуска Цикл
		СтрокаЗапуска = СтрокаЗапуска + " " + Параметр;
	КонецЦикла;

	Приложение = "";
	Приложение = Конфигуратор.ПутьКПлатформе1С();
	Если Найти(Приложение, " ") > 0 Тогда
		Приложение = """" + Приложение + """";
	КонецЕсли;
	Приложение = Приложение + " " + СтрокаЗапуска;
	Попытка
		ОбщегоНазначения.КомандаСистемы(Приложение);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Текст = "";
	ПутьКФайлу = Конфигуратор.ФайлИнформации();
	Файл = Новый Файл(ПутьКФайлу);
	Если Файл.Существует() Тогда	
		Чтение = Новый ЧтениеТекста(ПутьКФайлу, КодировкаТекста.ANSI, , , Ложь);
		Текст  = Чтение.Прочитать();
		Чтение.Закрыть();
	Иначе
		Текст = "Не найден файл статуса " + ПутьКФайлу;
	КонецЕсли;
	Если НЕ (СтрНайти(Текст, "успешно завершено") = 0
		ИЛИ СтрНайти(Текст, "completed successfully") = 0) Тогда

		ВызватьИсключение "Результат работы не успешен: " + Символы.ПС + Текст;

	КонецЕсли;

КонецПроцедуры
